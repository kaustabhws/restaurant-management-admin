// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Restaurants {
  id         String       @id @default(uuid())
  name       String
  userId     String
  menus      Menu[]       @relation("RestaurantToMenu")
  tables     Table[]      @relation("RestaurantToTable")
  orders     Orders[]     @relation("RestaurantToOrder")
  temporders TempOrders[] @relation("RestaurantToTempOrder")
  bills      Bill[]       @relation("RestaurantToBill")
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Menu {
  id             String           @id @default(uuid())
  name           String
  price          Float
  resId          String
  restaurant     Restaurants      @relation("RestaurantToMenu", fields: [resId], references: [id])
  orderItems     OrderItems[]
  temporderItems TempOrderItems[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt

  @@index([resId])
}

model Table {
  id         String       @id @default(uuid())
  name       String
  seats      Int
  status     String       @default("Available")
  resId      String
  restaurant Restaurants  @relation("RestaurantToTable", fields: [resId], references: [id])
  temporders TempOrders[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  @@index([resId])
}

model TempOrders {
  id         String           @id @default(uuid())
  resId      String
  restaurant Restaurants      @relation("RestaurantToTempOrder", fields: [resId], references: [id])
  tableId    String
  table      Table            @relation(fields: [tableId], references: [id])
  orderItems TempOrderItems[]
  amount     Float
  isPaid     Boolean
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt

  @@index([resId])
  @@index([tableId])
}

model TempOrderItems {
  id       String     @id @default(uuid())
  orderId  String
  orders   TempOrders @relation(fields: [orderId], references: [id])
  itemId   String
  menuItem Menu       @relation(fields: [itemId], references: [id])
  quantity Int        @default(0)

  @@index([orderId])
  @@index([itemId])
}

model Orders {
  id         String       @id @default(uuid())
  slNo       String
  resId      String
  tableNo    String
  restaurant Restaurants  @relation("RestaurantToOrder", fields: [resId], references: [id])
  orderItems OrderItems[]
  bill       Bill[]
  amount     Float
  isPaid     Boolean
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  @@index([resId])
  @@index([slNo])
}

model OrderItems {
  id       String @id @default(uuid())
  orderId  String
  orders   Orders @relation(fields: [orderId], references: [id])
  itemId   String
  menuItem Menu   @relation(fields: [itemId], references: [id])
  quantity Int    @default(0)

  @@index([orderId])
  @@index([itemId])
}

model Bill {
  id         String      @id @default(uuid())
  resId      String
  restaurant Restaurants @relation("RestaurantToBill", fields: [resId], references: [id])
  orderId    String
  orders     Orders      @relation(fields: [orderId], references: [id])
  itemName   String
  itemId     String
  totalPrice Float
  quantity   Int

  @@index([orderId])
  @@index([resId])
}
